// Copyright 2017, TCN Inc.
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:

//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of TCN Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package import_tests;

import "persist/options.proto";
import "google/protobuf/timestamp.proto";
import "examples/test/test.proto";

message ExampleTable {
	int64 id = 1;
	google.protobuf.Timestamp start_time = 2;
	string name = 3;
}

message AggExampleTables {
	repeated ExampleTable example_tables = 1;
}

service MySpanner {
  option (persist.service_type) = SPANNER;

  option (persist.mapping) = {
    types: [
      {
        proto_type_name: ".google.protobuf.Timestamp"
        proto_type:  TYPE_MESSAGE
        go_type: "MyTime"
        go_package: "github.com/tcncloud/protoc-gen-persist/examples/mytime"
      },
      {
        proto_type_name: ".examples.test.TestEnum"
        proto_type: TYPE_ENUM
        go_type: "MyEnum"
        go_package: ""
      }
    ]
  };
  rpc UniaryInsert(examples.test.ExampleTable) returns (ExampleTable) {
    option (persist.ql) = {
      query: ["Insert into example_table (id, start_time, name)  Values (?, ?, \"bananas\")"]
      arguments: ["id", "start_time"]
			before: {
				package: ""
				name: "TestBeforeHook"
			}
			after: {
				package: ""
				name: "TestAfterHook"
			}
    };
  };
	rpc ServerStream(examples.test.ExampleTable) returns (stream ExampleTable) {
		option (persist.ql) = {
			query: "SELECT * FROM example_table WHERE start_time < ?",
			arguments: ["start_time"]
		};
	};
	rpc ClientStream(stream examples.test.ExampleTable) returns (AggExampleTables) {
		option (persist.ql) = {
			query: ["UPDATE example_table SET start_time=?, name=? WHERE id=?"]
			arguments: ["start_time", "name", "id"]
			after: {
				package: ""
				name: "AggRequests"
			}
		};
	};
}
